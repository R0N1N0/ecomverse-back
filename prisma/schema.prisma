// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
enum Role {
  admin
  client
  helpdesk
}

enum State {
  active
  deleted
}

model User {
  id_user       Int       @id @default(autoincrement())
  firstName     String
  lastName      String
  password      String
  rol           Role
  birthdate     DateTime
  email         String?   @unique
  creationDate  DateTime  @default(now())
  deletedDate   DateTime?
  state         String
  addresses     Address[]
  carts         Cart[]

  @@map("users")
}

model Address {
  id_address             Int       @id @default(autoincrement())
  id_user         Int
  country        String
  mobile         String
  address        String
  additionalData String? 
  description    String?
  zipCode        String
  population     String
  province       String
  predetermined  Boolean   @default(false)
  creationDate   DateTime  @default(now())
  deletedDate    DateTime?
  state          String    @default("active")
  user           User      @relation(fields: [id_user], references: [id_user])

  @@map("addresses")
}

model Product {
  id_product    Int       @id @default(autoincrement())
  name          String
  description   String?
  price         Float
  creationDate  DateTime  @default(now())
  deletedDate   DateTime?
  state         State
  cartProducts  ProductCart[]
  variants      Variant[]
  images        ProductImage[]
}

model Cart {
  id_cart       Int          @id @default(autoincrement())
  id_user       Int
  user          User         @relation(fields: [id_user], references: [id_user])
  cartProducts  ProductCart[]
}

model ProductCart {
  id_cart_product Int       @id @default(autoincrement())
  id_cart         Int
  id_product      Int
  id_variant      Int?
  quantity        Int
  price           Float
  cart            Cart      @relation(fields: [id_cart], references: [id_cart])
  product         Product   @relation(fields: [id_product], references: [id_product])

  @@map("cart_product")
}

model Variant {
  id_variant   Int       @id @default(autoincrement())
  id_product   Int
  name         String
  price        Float
  creationDate DateTime  @default(now())
  deletedDate  DateTime?
  state        State
  product      Product   @relation(fields: [id_product], references: [id_product])
  images       ProductImage[]
}

model ProductImage {
  id_image     Int       @id @default(autoincrement())
  id_product   Int
  id_variant   Int?
  name         String
  url          String


  Product      Product   @relation(fields: [id_product], references: [id_product])
  Variant      Variant?  @relation(fields: [id_variant], references: [id_variant])

  @@map("product_image")
}

